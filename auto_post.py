from io import BytesIO
import base64
import traceback

from telebot import types

from settings import bot, OWNER_ID, client as openai_client, CHAT_MODEL
from openai_adapter import extract_response_text

CHANNEL_ID = "@SynteraAI"
GROUP_ID = "@HubConsult"
BOT_LINK = "https://t.me/SynteraGPT_bot"


def _generate_post_text(mode: str = "long") -> str:
    try:
        if mode == "short":
            prompt = (
                "–°–¥–µ–ª–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç (2‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞ –æ —á–∞—Ç-–±–æ—Ç–µ SynteraGPT.\n"
                "- –ø–æ–¥—á–µ—Ä–∫–Ω–∏ GPT-5 –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –±—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã, –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ/–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n"
                "- –¥–æ–±–∞–≤—å —Å—Å—ã–ª–∫—É: https://t.me/SynteraGPT_bot\n"
                "- —Å—Ç–∏–ª—å –∂–∏–≤–æ–π, –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 1 —ç–º–æ–¥–∑–∏, –±–µ–∑ —Ö—ç—à—Ç–µ–≥–æ–≤\n"
            )
        else:
            prompt = (
                "–°–¥–µ–ª–∞–π —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç (4‚Äì5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π) –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞ –æ —á–∞—Ç-–±–æ—Ç–µ SynteraGPT.\n"
                "- –ø–æ–¥—á–µ—Ä–∫–Ω–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: GPT-5 –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –±—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã, –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, "
                "—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–¥–∞, –≥–ª—É–±–æ–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è\n"
                "- —É–∫–∞–∂–∏, —á—Ç–æ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º –¥–∞–Ω–Ω—ã–º, –í–∏–∫–∏–ø–µ–¥–∏–∏, Google –∏ –¥—Ä—É–≥–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º\n"
                "- —É–ø–æ–º—è–Ω–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ò–ò –∏ –ø–∞—Ä—É —Å—Ç—Ä–æ–∫ –ø—Ä–æ –Ω–æ–≤–æ—Å—Ç–∏ –∏–ª–∏ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞\n"
                "- –¥–æ–±–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞: https://t.me/SynteraGPT_bot\n"
                "- —Å—Ç–∏–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π, –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 1‚Äì2 —ç–º–æ–¥–∑–∏, –±–µ–∑ —Ö—ç—à—Ç–µ–≥–æ–≤\n"
                "- –∏—Ç–æ–≥ –¥–æ 700 —Å–∏–º–≤–æ–ª–æ–≤\n"
            )

        resp = openai_client.chat.completions.create(
            model=CHAT_MODEL,
            messages=[{"role": "user", "content": prompt}],
            response_format={"type": "text"},
            max_completion_tokens=400,
        )
        return extract_response_text(resp).strip()
    except Exception as exc:
        print("[POSTGEN] –û—à–∏–±–∫–∞ GPT:", exc)
        return (
            "SynteraGPT ‚Äî —É–º–Ω—ã–π AI-–±–æ—Ç –Ω–∞ –±–∞–∑–µ GPT-5. "
            "–ë—ã—Å—Ç—Ä–æ –æ—Ç–≤–µ—á–∞–µ—Ç, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ç–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Å–æ–∑–¥–∞—ë—Ç –∫–æ–¥ –∏ –¥–µ–ª–∞–µ—Ç –≥–ª—É–±–æ–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. "
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É, –í–∏–∫–∏–ø–µ–¥–∏–∏ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º –¥–∞–Ω–Ω—ã–º. "
            "–í—Å–µ–≥–¥–∞ –≤ –∫—É—Ä—Å–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.\n\n"
            "üëâ –ü–æ–ø—Ä–æ–±—É–π: https://t.me/SynteraGPT_bot"
        )


def _generate_post_image():
    try:
        img_prompt = (
            "–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ã–π –±–∞–Ω–Ω–µ—Ä –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞ –ø—Ä–æ —á–∞—Ç-–±–æ—Ç–∞ SynteraGPT. "
            "–¢—ë–º–Ω—ã–π –∫–æ—Å–º–æ—Å, –∑–Ω–∞–∫ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏ ‚àû –≤ –Ω–µ–æ–Ω–æ–≤–æ–º —Å—Ç–∏–ª–µ, "
            "—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ."
        )
        result = openai_client.images.generate(
            model="gpt-image-1",
            prompt=img_prompt,
            size="1280x720",
        )
        b64 = result.data[0].b64_json
        img_bytes = base64.b64decode(b64)
        return BytesIO(img_bytes)
    except Exception as exc:
        print("[POSTGEN] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏:", exc)
        return None


@bot.message_handler(commands=["post"])
def cmd_post(message):
    user_id = getattr(message.from_user, "id", None)
    if user_id != OWNER_ID:
        bot.reply_to(message, "‚õî –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É.")
        return

    args = message.text.split()
    mode = "long"
    if len(args) > 1 and args[1].lower() == "short":
        mode = "short"

    bot.reply_to(message, f"‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é {('–∫–æ—Ä–æ—Ç–∫–∏–π' if mode == 'short' else '–¥–ª–∏–Ω–Ω—ã–π')} –ø–æ—Å—Ç...")

    caption = _generate_post_text(mode)
    img = _generate_post_image()

    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ –±–æ—Ç—É", url=BOT_LINK))

    try:
        for target in [CHANNEL_ID, GROUP_ID]:
            if img:
                bot.send_photo(
                    target,
                    img,
                    caption=caption,
                    parse_mode="HTML",
                    reply_markup=kb,
                )
            else:
                bot.send_message(
                    target,
                    caption,
                    parse_mode="HTML",
                    reply_markup=kb,
                )
        bot.reply_to(message, "‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª –∏ –≥—Ä—É–ø–ø—É.")
    except Exception as exc:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {exc}")
        traceback.print_exc()
