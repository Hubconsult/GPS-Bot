# tariffs.py
from rewards import give_smile, give_avatar, give_next_card
from settings import PAY_URL_HARMONY, PAY_URL_REFLECTION, PAY_URL_TRAVEL
import datetime

# --- –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ ---
user_tariffs = {}  # {chat_id: {"tariff": str, "start": date, "end": date}}

# --- –¢–∞—Ä–∏—Ñ—ã ---
TARIFFS = {
    "sozvuchie": {
        "name": "üå± –°–æ–∑–≤—É—á–∏–µ",
        "price": 299,
        "description": "–ü–µ—Ä–≤–æ–µ –ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏–µ –∫ —Å–µ–±–µ: —Å–º–∞–π–ª—ã –∏ GPT-5 Mini.",
        "starter_reward": give_smile,
        "category": "smiles",
        "pay_url": PAY_URL_HARMONY,
    },
    "otrazhenie": {
        "name": "üåø –û—Ç—Ä–∞–∂–µ–Ω–∏–µ",
        "price": 999,
        "description": "–í–∏–¥–µ—Ç—å —Å–µ–±—è —è—Å–Ω–µ–µ: –∞–≤–∞—Ç–∞—Ä–∫–∏ –∏ GPT-5 –æ–±—ã—á–Ω—ã–π.",
        "starter_reward": give_avatar,
        "category": "avatars",
        "pay_url": PAY_URL_REFLECTION,
    },
    "puteshestvie": {
        "name": "üåå –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ",
        "price": 1999,
        "description": "–ì–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: –∫–∞—Ä—Ç–æ—á–∫–∏ –∏—Å—Ç–æ—Ä–∏–π –∏ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ GPT-5.",
        "starter_reward": give_next_card,
        "category": "cards",
        "pay_url": PAY_URL_TRAVEL,
    },
}

def activate_tariff(chat_id: int, tariff_key: str):
    if tariff_key not in TARIFFS:
        return None, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ"

    tariff = TARIFFS[tariff_key]
    reward_func = tariff["starter_reward"]
    reward = reward_func(chat_id)

    start_date = datetime.date.today()
    end_date = start_date + datetime.timedelta(days=30)

    user_tariffs[chat_id] = {
        "tariff": tariff_key,
        "start": start_date,
        "end": end_date,
    }

    return reward, f"‚ú® –¢—ã –ø–æ–¥–∫–ª—é—á–∏–ª —Ç–∞—Ä–∏—Ñ <b>{tariff['name']}</b>!\n\n" \
                   f"{tariff['description']}\n" \
                   f"–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: {end_date.strftime('%d.%m.%Y')}"

def check_expiring_tariffs(bot):
    today = datetime.date.today()
    for chat_id, info in list(user_tariffs.items()):
        if info["end"] - today == datetime.timedelta(days=3):
            from bot_utils import offer_renew
            offer_renew(bot, chat_id, info["tariff"])
